proc format;
    value format-name value-or-range = 'formatted-value'             # 字符格式名要以$开头，且只能包含字母和下划线；数字格式名可用字母或下划线开头 #
                      value-or-range = 'formatted-value'
                      ...;
run;

e.g.
proc format;
    value $regfmt 'C'='Complete'                 # 字符格式名 #
                  'I'='Incomplete'
                  other= 'miscoded' ;            # other指所有不包含在前面条件的值 #
    value hrange 50 -< 57 = 'Below Average'         # 数字格式名，范围写法 #  # 此语句意为小于且不包含57 #
                 58 - 60 = 'Average'。              # 包含58和60 #
                 61 <- 70 = 'Above Average'         # 不包含61 #
                 low -< 58 = 'Below Average'        # 小于58的任何数，包括0和负数 #
                 60 - high = 'Above Average'       # 大于60的任何数 #
run;

# put()的用法：类似于format，但是可以生成新列。将任何值转化为character string格式。format.部分是numeric格式，用以读取put()中的内容 #
newChar = put(sourceValue , format.);
newChar = put(sourceValue , z5.);                # z5. 是将制定的数字列转化为5个数字的char column，例如1转化为00001，234转化为0234 #
-------------------------------------------------------------------------------------------------------------------------------------------
# 从一个表中导入Format #
需要先创建含有FmtName,start,label三个列的表，如果是范围的话还需要再加一个end列。FmtName是Format Name，如果定义character格式要加$;Star是待format部分;Label是format后部分。

方法1️⃣：
data sbdata;
	set sourcedata;
	FmtName="$newformat";
	start=KeyName;
	Label=FullName;
	keep FmtName start Label;
run;
proc format cntlin=sbdata;
run;

方法2️⃣：
data sbdata;                                                         # 定义一个表 #
    retain FmtName '$sbfmt';                                         # 定义FmtName，设置格式名为 $sbfmt #
    set pg2.storm_subbasincodes(rename=(Sub_Basin=Start 
                                        SubBasin_Name=Label));       # 将特定的列rename为start,end,label #
    keep Start Label FmtName;                                        # 仅保留格式名，以及设置格式的值 #
run;
proc format cntlin=sbdata;                                           # 设定格式，使用cntlin=前面定义的表。cntlin的意思是control input #
run;
-------------------------------------------------------------------------------------------------------------------------------------------
# 查找定义的格式的属性 #
proc format fmtlib library=work;
	select $sbfmt catfmt;                  # 选择特定格式 #
run;
-------------------------------------------------------------------------------------------------------------------------------------------
# 将定义好的格式永久存储 #
proc format library=pg2.formats；
proc format library=pg2;                  # 系统会自动在指定library建立formats文件夹，并存储 #
proc format lib=pg2;  
-------------------------------------------------------------------------------------------------------------------------------------------
# 在利用定义的格式前，告诉系统该在哪里找到定义的格式 #
options fmtsearch=(pg2.formats);
proc print....
proc mean...
